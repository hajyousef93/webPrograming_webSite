@model BIKECOWEBSITE.Models.Customer

@{
    ViewBag.Title = "Edit";
}
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@Styles.Render("~/Content/css")

<h2>Update My Account:</h2>
@if (Session["UserId"] != null)
{

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-inline" style="width:1200px;">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group" style="width:380px;">
                <div class="form-group">
                    @Html.Label("Email-User Name", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "width:220px", @readonly = "readonly" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.F_Name, new { htmlAttributes = new { @class = "form-control", @style = "width:220px" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.F_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.L_Name, new { htmlAttributes = new { @class = "form-control", @style = "width:220px" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.L_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Pass, new { htmlAttributes = new { @class = "form-control", @style = "width:220px" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Gender", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Buy, htmlAttributes: new { @class = "control-label col-md-2", @style = "display:none" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Buy, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly", @style = "display:none" } })
                        @Html.ValidationMessageFor(model => model.Buy, "", new { @class = "text-danger", @style = "display:none" })
                    </div>
                </div>
            </div>

            <div class="form-group" style="width:380px;">
                <div class="form-group">
                    @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Marital_Status", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Marital_Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Income, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Income, new { htmlAttributes = new { @class = "form-control", @style = "width:220px" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.Income, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Children, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Children", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Children, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Education", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Occupation", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" style="width:380px;">
                <div class="form-group">

                    @Html.Label("Home Owner", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Home_Owner", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Home_Owner, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Cars, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Cars", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Cars, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Distance-Work/School", htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Commute_Distance", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Commute_Distance, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.DropDownList("Region", null, htmlAttributes: new { @class = "form-control", @style = "width:220px" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @style = "width:220px" } })
                        <br />
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2", @style = "display:none" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly", @style = "display:none" } })
                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger", @style = "display:none" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="form-group">
            <div class="col-md-offset-0 col-md-2">
                <input type="submit" value="Save" class="w3-button btn-block w3-black w3-round" style="width:220px;">
            </div>
        </div>
    }
    <div class="form-group" style="text-align:center">
        @Html.ActionLink("Home", "Index", "Home")
    </div>
}
else {
<h2>Please Login</h2>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
