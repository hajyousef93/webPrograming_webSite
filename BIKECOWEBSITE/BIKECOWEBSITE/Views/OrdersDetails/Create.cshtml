@model List<BIKECOWEBSITE.Models.OrdersDetail>

@{
    ViewBag.Title = "Create";
}
@using BIKECOWEBSITE.Controllers
@{ double sum = 1;
    var solditem = new List<string>();
    var cat = new List<string>();
    var qty = new List<int>();
    var price = new List<double>();


}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrdersDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @for (int i = 0; i <= solditem.Count() - 1; i++)
        {
            @solditem[i]
            int a = 1;
            a = a + 1;
            <div class="form-group">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @Value = i + ViewBag.orderdeid, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrderNumber, "OrderNumber", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control", @Value = "SO" + ViewBag.NO, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @Value = cat[i], @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Product, "Product", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "form-control", @Value = solditem[i], @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control", @Value = price[i], @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
