@model List<BIKECOWEBSITE.Models.Rates_Comments>

@{
    ViewBag.Title = "Your Opinion";
}


<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@Styles.Render("~/Content/css")


@using BIKECOWEBSITE.Controllers
@{ double sum = 0;
    var solditem = new List<string>();
    var cat = new List<string>();
    var qty = new List<int>();
    var price = new List<double>();
    int a = 0;

}
@if (Session["cart"] != null){
    foreach (Item item in (List<Item>)Session["cart"])
    {
        double suumm = 0;
        if (item.Product.SellPrice.HasValue)
        {
            suumm = item.Product.SellPrice.Value;
            price.Add(item.Product.SellPrice.Value);
        }
        sum += (suumm * item.Quantity);
    @*<tr>
            <td colspan="3">@item.Product.Product1</td>
            <td colspan="3">@item.Product.Category</td>
            <td>@item.Product.SellPrice$</td>
            <td>@item.Quantity</td>
            <td>@(item.Product.SellPrice * item.Quantity)$</td>
        </tr>*@
        solditem.Add(item.Product.Product1);
        cat.Add(item.Product.Category);
        qty.Add(item.Quantity);
    }
}
<div class="form-horizontal">
    <h4>Please share your experience for others: </h4>
    <br/>
    <h4>User: @Session["UserName"] </h4>
    <h4>ID: @Session["UserId"] </h4>
    <hr />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        for (int i = 0; i <= solditem.Count() - 1; i++)
        {


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].ProductID, new { htmlAttributes = new { @class = "form-control", @Value = solditem[i], @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model[i].ProductID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].Comments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model[i].Rates, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].Rates, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model[i].Rates, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model[i].User_ID, htmlAttributes: new { @class = "control-label col-md-2", @Style = "Display:none" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model[i].User_ID, new { htmlAttributes = new { @class = "form-control", @Value = Session["UserId"], @Style = "Display:none" } })
                    @Html.ValidationMessageFor(model => model[i].User_ID, "", new { @class = "text-danger", @Style = "Display:none" })
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Your Opinion" class="btn btn-default" />
            </div>
        </div>


    }
</div>

    <div>
        @*@Html.ActionLink("Back to List", "Index")*@
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };
        alert("Your Invoice Is Saved, Thanks You");
    </script>